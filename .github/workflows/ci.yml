name: CI

on:
  workflow_call:
    inputs:
      isRelease:
        required: true
        type: boolean

jobs:

  test:
    name: 'Test'
    runs-on: macos-14
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup

      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}

      - name: Test
        shell: bash
        run: ./gradlew check --no-daemon --scan

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/*
          compression-level: 9

  build-android:
    name: 'Build: Android'
    needs: test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup

      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          android-upload-keystore-passphrase: ${{ secrets.UPLOAD_KEYSTORE_JKS_PASSPHRASE }}
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}

      - name: Build App
        shell: bash
        run: ./gradlew packageReleaseBundle --no-daemon --scan

      - if: ${{ inputs.isRelease }}
        name: Setup upload-keystore.jks
        uses: ./.github/actions/upload-keystore-setup
        with:
          upload-keystore-jks-base64: ${{ secrets.UPLOAD_KEYSTORE_JKS_BASE64 }}

      - if: ${{ inputs.isRelease }}
        name: Sign App
        shell: bash
        run: ./gradlew signReleaseBundle --no-daemon --scan

      - if: ${{ inputs.isRelease }}
        name: Publish App
        uses: r0adkll/upload-google-play@v1
        with:
          debugSymbols: build/intermediates/merged_native_libs/release/out/lib/
          mappingFile: build/outputs/mapping/release/mapping.txt
          packageName: com.wizbii.cinematic.journey
          releaseFiles: build/outputs/bundle/release/CinematicJourney-release.aab
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          track: beta

  build-desktop:
    strategy:
      matrix:
        os: [ linux, macos, windows ]
        include:
          - os: linux
            name: Linux
            runs-on: ubuntu-latest
          - os: macos
            name: MacOS
            runs-on: macos-14
          - os: windows
            name: Windows
            runs-on: windows-latest
    name: 'Build: ${{ matrix.name }}'
    needs: test
    runs-on: ${{ matrix.runs-on }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup

      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}

      - name: Build App
        shell: bash
        run: ./gradlew packageReleaseUberJarForCurrentOS --no-daemon --scan

      - if: ${{ inputs.isRelease }}
        name: Upload Jar
        uses: actions/upload-artifact@v4
        with:
          name: desktop-${{ matrix.os }}
          path: build/compose/jars/*.jar
          compression-level: 0

  build-ios:
    name: 'Build: iOS'
    needs: test
    runs-on: macos-14
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Gitlab Access
        uses: ./.github/actions/gitlab-access-setup
        with:
          gitlab-access-token: ${{ secrets.GITLAB_PERSONAL_ACCESS_TOKEN }}

      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup

      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}

      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 15.4

      - name: Apply Gradle Build version to XCode project
        shell: bash
        run: ./gradlew setXcodeVersion --no-daemon --scan

      - if: ${{ ! inputs.isRelease }}
        name: Build App
        shell: bash
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          cd xcode
          bundle install
          bundle exec fastlane build

      - if: ${{ inputs.isRelease }}
        name: Build & Publish App
        shell: bash
        env:
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          cd xcode
          bundle install
          bundle exec fastlane beta
